package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"encoding/json"

	"github.com/wetee-dao/indexer/graph/model"
	"github.com/wetee-dao/indexer/store"
)

// ListEvent is the resolver for the list_event field.
func (r *queryResolver) ListEvent(ctx context.Context, project string, page int, pageSize int) ([]*model.Event, error) {
	list, err := store.GetList("event", project, page, pageSize)
	if err != nil {
		return nil, err
	}

	slist := make([]*model.Event, 0, len(list))
	for _, v := range list {
		c := model.Event{}
		json.Unmarshal(v, &c)
		slist = append(slist, &c)
	}

	return slist, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
